{
  "TODO": "TOATE",
  "proporcionar conexión por patrón singleton": "asigura conexiune tip singleton",
  "Firstly, we create the object and the resolve function.": "În primul rând, creăm obiectul şi funcţia de rezolvare.",
  "Luego cargamos la API de base de datos.": "Apoi vom încărca baza de date API.",
  "Y al final definimos las funciones de inicio y cierre, y devolvemos el objeto de la API.": "Şi în final definim funcţiile de început şi de închidere şi returnăm obiectul API.",
  "El API Loader es la función que se encarga de montar toda la API,\nque al final es un objeto que está accesible, normalmente,\no como `this` en los métodos del propio framework,\no como algún parámetro.\n": "Încărcătorul API este funcția care este responsabilă pentru montarea întregului API,\ncă în final este un obiect accesibil, în mod normal;\nsau ca \"acesta\" în metodele cadrului în sine,\nsau ca parametru.\n.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar, aunque no estrictamente, que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Se spune că API este întotdeauna accesibil deoarece, în general, acest proiect adoptă modele sau idei de programare funcțională. Şi încercaţi, deşi nu strict, că toate variabilele folosite în funcţie sunt furnizate prin intermediul acestui sau prin intermediul parametrilor este o clauză în stilul meu de programare.",
  "ATENCIÓN": "ATENŢIE",
  "los módulos deben estar en orden de carga, de lo contrario implementa tu propia estrategia o envuélvelo como 1 grupo.": "modulele trebuie să fie în ordinea sarcinii, altfel implementați propria strategie sau încheiați-l ca 1 grup.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar (no estrictamente) que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Se spune că API este întotdeauna accesibil deoarece, în general, acest proiect adoptă modele sau idei de programare funcțională. Și încercați (nu strict) că toate variabilele utilizate în funcție sunt furnizate prin intermediul acestui .",
  "i18n.hello": "Salutare tuturor!"
}