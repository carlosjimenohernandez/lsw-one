{
  "TODO": "ВСІ",
  "proporcionar conexión por patrón singleton": "забезпечити з'єднання з однотонним малюнком",
  "Firstly, we create the object and the resolve function.": "По-перше, ми створюємо об'єкт і функцію вирішення.",
  "Luego cargamos la API de base de datos.": "Потім ми завантажуємо API бази даних.",
  "Y al final definimos las funciones de inicio y cierre, y devolvemos el objeto de la API.": "І в кінці ми визначаємо початок і закриваємо функції, і повертаємо об'єкт API.",
  "El API Loader es la función que se encarga de montar toda la API,\nque al final es un objeto que está accesible, normalmente,\no como `this` en los métodos del propio framework,\no como algún parámetro.\n": "API Loader - це функція, яка відповідає за монтаж всього API,\nщо в кінці є об'єктом, який доступний, зазвичай,\nабо як `this` в методах самої основи,\nабо як параметр.\n.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar, aunque no estrictamente, que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Це говорить, що API завжди доступний, тому що, в цілому, цей проект приймає візерунки або ідеї функціонального програмування. І намагатися, хоча б не строго, що всі змінні, які використовуються в функції, надані через `this` або через параметри є пунктом в моєму стилі програмування.",
  "ATENCIÓN": "УВАГА",
  "los módulos deben estar en orden de carga, de lo contrario implementa tu propia estrategia o envuélvelo como 1 grupo.": "модулі повинні бути в порядку навантаження, інакше реалізовувати власну стратегію або обгорнути її як 1 група.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar (no estrictamente) que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Це говорить, що API завжди доступний, тому що, в цілому, цей проект приймає візерунки або ідеї функціонального програмування. І намагатися (не строго), що всі змінні, які використовуються в функції, надаються за допомогою `this` або через параметри є пунктом в моєму стилі програмування.",
  "i18n.hello": "Привіт, кожен!"
}