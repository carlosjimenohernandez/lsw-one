{
  "TODO": "VSE",
  "proporcionar conexión por patrón singleton": "zagotovi povezavo z enotonskim vzorcem",
  "Firstly, we create the object and the resolve function.": "Prvič, ustvarimo objekt in funkcijo reševanja.",
  "Luego cargamos la API de base de datos.": "Nato naložimo bazo podatkov API.",
  "Y al final definimos las funciones de inicio y cierre, y devolvemos el objeto de la API.": "In na koncu definiramo zagon in zapiranje funkcij, in vračamo predmet API.",
  "El API Loader es la función que se encarga de montar toda la API,\nque al final es un objeto que está accesible, normalmente,\no como `this` en los métodos del propio framework,\no como algún parámetro.\n": "API polnilnik je funkcija, ki je odgovorna za pritrditev celotnega API,\nda je na koncu predmet, ki je običajno dostopen,\nali kot »to« v metodah samega okvira,\nali kot parameter.\n.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar, aunque no estrictamente, que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Pravijo, da je API vedno dostopen, ker na splošno ta projekt sprejema vzorce ali ideje funkcionalnega programiranja. In poskusite, čeprav ne strogo, da so vse spremenljivke, ki se uporabljajo v funkciji, zagotovljene preko »to« ali preko parametrov, je klavzula v mojem programskem slogu.",
  "ATENCIÓN": "POZOR",
  "los módulos deben estar en orden de carga, de lo contrario implementa tu propia estrategia o envuélvelo como 1 grupo.": "moduli morajo biti v vrstnem redu obremenitve, sicer izvajati svojo strategijo ali jo zaviti v 1 skupino.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar (no estrictamente) que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Pravijo, da je API vedno dostopen, ker na splošno ta projekt sprejema vzorce ali ideje funkcionalnega programiranja. In poskusite (ne strogo) da so vse spremenljivke, uporabljene v funkciji, zagotovljene preko »to« ali preko parametrov je klavzula v mojem programskem slogu.",
  "i18n.hello": "Pozdravljeni!"
}