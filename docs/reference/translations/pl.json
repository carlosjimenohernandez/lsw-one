{
  "TODO": "ALL",
  "proporcionar conexión por patrón singleton": "zapewnić połączenie wzorca singleton",
  "Firstly, we create the object and the resolve function.": "Po pierwsze, tworzymy obiekt i funkcję rozwiązywania.",
  "Luego cargamos la API de base de datos.": "Potem załadujemy API bazy danych.",
  "Y al final definimos las funciones de inicio y cierre, y devolvemos el objeto de la API.": "W końcu definiujemy początkowe i zamykane funkcje i zwracamy obiekt API.",
  "El API Loader es la función que se encarga de montar toda la API,\nque al final es un objeto que está accesible, normalmente,\no como `this` en los métodos del propio framework,\no como algún parámetro.\n": "API Loader jest funkcją odpowiedzialną za montaż całego API,\nże w końcu jest obiekt, który jest dostępny, normalnie,\nlub jako \"to\" w metodach samych ram,\nlub jako parametr.\n.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar, aunque no estrictamente, que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Mówi się, że API jest zawsze dostępny, ponieważ ogólnie projekt ten przyjmuje wzorce lub pomysły funkcjonalnego programowania. I spróbuj, choć nie ściśle, że wszystkie zmienne używane w funkcji są dostarczane przez 'to' lub przez parametry jest klauzulą w moim stylu programowania.",
  "ATENCIÓN": "UWAGA",
  "los módulos deben estar en orden de carga, de lo contrario implementa tu propia estrategia o envuélvelo como 1 grupo.": "moduły muszą być w kolejności obciążenia, w przeciwnym razie implementować własną strategię lub zapakować jako 1 grupa.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar (no estrictamente) que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Mówi się, że API jest zawsze dostępny, ponieważ ogólnie projekt ten przyjmuje wzorce lub pomysły funkcjonalnego programowania. I spróbuj (nie ściśle), że wszystkie zmienne używane w funkcji są dostarczane przez 'to' lub przez parametry jest klauzulą w moim stylu programowania.",
  "i18n.hello": "Witam wszystkich!"
}