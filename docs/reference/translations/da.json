{
  "TODO": "ALLE",
  "proporcionar conexión por patrón singleton": "tilbyd singleton mønster forbindelse",
  "Firstly, we create the object and the resolve function.": "For det første skaber vi objektet og løse funktionen.",
  "Luego cargamos la API de base de datos.": "Så indlæse vi database API.",
  "Y al final definimos las funciones de inicio y cierre, y devolvemos el objeto de la API.": "Og i sidste ende definerer vi start- og tætte funktioner, og vi vender tilbage objektet på API.",
  "El API Loader es la función que se encarga de montar toda la API,\nque al final es un objeto que está accesible, normalmente,\no como `this` en los métodos del propio framework,\no como algún parámetro.\n": "Loader API er den funktion, der er ansvarlig for montering af hele API,\nat i sidste ende er et objekt, der er tilgængeligt, normalt,\neller som »dette« i selve rammemetoderne\neller som parameter.\n.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar, aunque no estrictamente, que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Det siges, at API altid er tilgængeligt, fordi dette projekt vedtager mønstre eller ideer af funktionel programmering. Og prøv, selvom ikke strengt, at alle variabler, der bruges i funktionen, leveres via \"dette\" eller via parametre, er en klausul i min programmeringsstil.",
  "ATENCIÓN": "BEGRÆNSNINGER",
  "los módulos deben estar en orden de carga, de lo contrario implementa tu propia estrategia o envuélvelo como 1 grupo.": "modulerne skal være for belastning, ellers implementere din egen strategi eller pakke den op som 1 gruppe.",
  "Se dice que la API siempre está accesible porque, en general, este proyecto adopta patrones o ideas de la programación funcional. E intentar (no estrictamente) que todas las variables que se usan en la función se proporcionen vía `this` o vía parámetros es una cláusula en mi estilo de programación.": "Det siges, at API altid er tilgængeligt, fordi dette projekt vedtager mønstre eller ideer af funktionel programmering. Og prøv (ikke strengt), at alle variabler, der bruges i funktionen, leveres via dette \" eller via parametre, er en klausul i min programmeringsstil.",
  "i18n.hello": "Hej, alle!"
}