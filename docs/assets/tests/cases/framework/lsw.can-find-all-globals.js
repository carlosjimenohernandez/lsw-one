assert.title("Framework globals");
assert.as("global LswAgendaRandomizer exists").that(typeof LswAgendaRandomizer !== "undefined");
assert.as("global LswAgendaRandomizerReglas exists").that(typeof LswAgendaRandomizerReglas !== "undefined");
assert.as("global LswAndroid exists").that(typeof LswAndroid !== "undefined");
assert.as("global LswBackgroundConfiguredPromise exists").that(typeof LswBackgroundConfiguredPromise !== "undefined");
assert.as("global LswBackgroundImages exists").that(typeof LswBackgroundImages !== "undefined");
assert.as("global LswBackuper exists").that(typeof LswBackuper !== "undefined");
assert.as("global LswBarsGraph exists").that(typeof LswBarsGraph !== "undefined");
assert.as("global LswBooks exists").that(typeof LswBooks !== "undefined");
assert.as("global LswCircuiter exists").that(typeof LswCircuiter !== "undefined");
assert.as("global LswClassRegister exists").that(typeof LswClassRegister !== "undefined");
assert.as("global LswCompromiser exists").that(typeof LswCompromiser !== "undefined");
assert.as("global LswConductometria exists").that(typeof LswConductometria !== "undefined");
assert.as("global LswConductometriaReport exists").that(typeof LswConductometriaReport !== "undefined");
assert.as("global LswConsoleHooker exists").that(typeof LswConsoleHooker !== "undefined");
assert.as("global LswConstants exists").that(typeof LswConstants !== "undefined");
assert.as("global LswCycler exists").that(typeof LswCycler !== "undefined");
assert.as("global LswDatabase exists").that(typeof LswDatabase !== "undefined");
assert.as("global LswDatabaseAdapter exists").that(typeof LswDatabaseAdapter !== "undefined");
assert.as("global LswDatabaseMigration exists").that(typeof LswDatabaseMigration !== "undefined");
assert.as("global LswDatabaseQueryLanguage exists").that(typeof LswDatabaseQueryLanguage !== "undefined");
assert.as("global LswDatabaseVirtualizer exists").that(typeof LswDatabaseVirtualizer !== "undefined");
assert.as("global LswDebugger exists").that(typeof LswDebugger !== "undefined");
assert.as("global LswDepender exists").that(typeof LswDepender !== "undefined");
assert.as("global LswDialogs exists").that(typeof LswDialogs !== "undefined");
assert.as("global LswDom exists").that(typeof LswDom !== "undefined");
assert.as("global LswDomIrruptor exists").that(typeof LswDomIrruptor !== "undefined");
assert.as("global LswEnsurer exists").that(typeof LswEnsurer !== "undefined");
assert.as("global LswErrorHandler exists").that(typeof LswErrorHandler !== "undefined");
assert.as("global LswFilesystem exists").that(typeof LswFilesystem !== "undefined");
assert.as("global LswFormtypes exists").that(typeof LswFormtypes !== "undefined");
assert.as("global LswGoals exists").that(typeof LswGoals !== "undefined");
assert.as("global LswIntruder exists").that(typeof LswIntruder !== "undefined");
assert.as("global LswJsInspector exists").that(typeof LswJsInspector !== "undefined");
assert.as("global LswLauncher exists").that(typeof LswLauncher !== "undefined");
assert.as("global LswLazyLoader exists").that(typeof LswLazyLoader !== "undefined");
assert.as("global LswLazyLoads exists").that(typeof LswLazyLoads !== "undefined");
assert.as("global LswLifecycle exists").that(typeof LswLifecycle !== "undefined");
assert.as("global LswMarkdown exists").that(typeof LswMarkdown !== "undefined");
assert.as("global LswProxifier exists").that(typeof LswProxifier !== "undefined");
assert.as("global LswRandomizer exists").that(typeof LswRandomizer !== "undefined");
assert.as("global LswSchema exists").that(typeof LswSchema !== "undefined");
assert.as("global LswTemporizer exists").that(typeof LswTemporizer !== "undefined");
assert.as("global LswTester exists").that(typeof LswTester !== "undefined");
assert.as("global LswTimer exists").that(typeof LswTimer !== "undefined");
assert.as("global LswToasts exists").that(typeof LswToasts !== "undefined");
assert.as("global LswTreeParser exists").that(typeof LswTreeParser !== "undefined");
assert.as("global LswTyper exists").that(typeof LswTyper !== "undefined");
assert.as("global LswTyperParser exists").that(typeof LswTyperParser !== "undefined");
assert.as("global LswUtils exists").that(typeof LswUtils !== "undefined");
assert.as("global LswVolatileDB exists").that(typeof LswVolatileDB !== "undefined");
assert.as("global LswVue2 exists").that(typeof LswVue2 !== "undefined");
assert.as("global LswWeekLang exists").that(typeof LswWeekLang !== "undefined");
assert.as("global LswWikiUtils exists").that(typeof LswWikiUtils !== "undefined");
assert.as("global LswWindows exists").that(typeof LswWindows !== "undefined");
assert.as("global LswXForm exists").that(typeof LswXForm !== "undefined");
assert.as("global isLswApplicationReady exists").that(typeof isLswApplicationReady !== "undefined");
assert.as("global lsw exists").that(typeof lsw !== "undefined");
assert.as("global $lswClassRegistry exists").that(typeof $lswClassRegistry !== "undefined");
assert.as("global $lswSchema exists").that(typeof $lswSchema !== "undefined");
assert.as("global $lswTyper exists").that(typeof $lswTyper !== "undefined");